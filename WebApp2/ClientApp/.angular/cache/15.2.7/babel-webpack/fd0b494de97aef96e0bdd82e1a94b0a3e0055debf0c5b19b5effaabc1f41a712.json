{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CollectionFlashcardComponent = class CollectionFlashcardComponent {\n  constructor(_collectionFlashcardService, _http, _router) {\n    this._collectionFlashcardService = _collectionFlashcardService;\n    this._http = _http;\n    this._router = _router;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    this.collectionFlashcards = [];\n    this._listFilter = '';\n    //  deleteCollection(collection: ICollectionFlashcard): void {\n    //    const confirmDelete = confirm(`Are you sure you want to delete \"${collection.collectionName}\"?`);\n    //    if (confirmDelete) {\n    //      this._collectionService.deleteCollection(collection.collectionId)\n    //        .subscribe(\n    //          (response) => {\n    //            if (response.success) {\n    //              console.log(response.message);\n    //              this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\n    //              // Update collections\n    //              this.getCollections();\n    //            }\n    //          },\n    //          (error) => {\n    //            console.error('Error deleting collection', error);\n    //          });\n    //    }\n    //}\n    this.filteredCollections = this.collectionFlashcards;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredCollectionFlashcards = this.performFilter(value);\n  }\n  getCollections() {\n    this._collectionFlashcardService.getCollections().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      console.log();\n      this.collectionFlashcards = data;\n      this.filteredCollectionFlashcards = this.collectionFlashcards;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLowerCase();\n    console.log(\"Performing filter on \", this.filteredCollections);\n    return this.collectionFlashcards.filter(collections => this.collectionFlashcards.flashcardId.name.toLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToCollectionform() {\n    this._router.navigate(['/collectionform']);\n  }\n  ngOnInit() {\n    console.log('CollectionConponent created');\n    this.getCollections();\n  }\n};\nCollectionFlashcardComponent = __decorate([Component({\n  selector: 'app-collections-component',\n  templateUrl: './collections.component.html',\n  styles: ['thead {color: blue;}']\n})], CollectionFlashcardComponent);\nexport { CollectionFlashcardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAWxC,IAAMC,4BAA4B,GAAlC,MAAMA,4BAA4B;EAKzCC,YAAoBC,2BAAuD,EAAUC,KAAiB,EAAUC,OAAe;IAA3G,gCAA2B,GAA3BF,2BAA2B;IAAsC,UAAK,GAALC,KAAK;IAAsB,YAAO,GAAPC,OAAO;IAJrH,cAAS,GAAW,OAAO;IAC3B,iBAAY,GAAY,IAAI;IAC5B,yBAAoB,GAA2B,EAAE;IAIzC,gBAAW,GAAW,EAAE;IAmBlC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA,wBAAmB,GAA2B,IAAI,CAACC,oBAAoB;EAxC4D;EAGjI,IAAIC,UAAU;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EACA,IAAID,UAAU,CAACE,KAAa;IAC1B,IAAI,CAACD,WAAW,GAAGC,KAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;IAChC,IAAI,CAACG,4BAA4B,GAAG,IAAI,CAACC,aAAa,CAACJ,KAAK,CAAC;EAC/D;EAEFK,cAAc;IACZ,IAAI,CAACX,2BAA2B,CAACW,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjEN,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEM,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;MACxCN,OAAO,CAACC,GAAG,EAAE;MACb,IAAI,CAACL,oBAAoB,GAAGU,IAAI;MAChC,IAAI,CAACJ,4BAA4B,GAAG,IAAI,CAACN,oBAAoB;IAC7D,CAAC,CAAC;EACJ;EAuBFO,aAAa,CAACM,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,WAAW,EAAE;IACjCV,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACU,mBAAmB,CAAC;IAC9D,OAAO,IAAI,CAACf,oBAAoB,CAACgB,MAAM,CAAEC,WAAiC,IACxE,IAAI,CAACjB,oBAAoB,CAACkB,WAAW,CAACC,IAAI,CAACL,WAAW,EAAE,CAACM,QAAQ,CAACP,QAAQ,CAAC,CAAC;EAChF;EAEAQ,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAC,wBAAwB;IACtB,IAAI,CAACxB,OAAO,CAACyB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC5C;EAEAC,QAAQ;IACNrB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAI,CAACG,cAAc,EAAE;EACvB;CAED;AAnEcb,4BAA4B,eAL1CD,SAAS,CAAC;EACTgC,QAAQ,EAAE,2BAA2B;EACrCC,WAAW,EAAE,8BAA8B;EAC3CC,MAAM,EAAE,CAAC,sBAAsB;CAChC,CAAC,GACajC,4BAA4B,CAmE1C;SAnEcA,4BAA4B","names":["Component","CollectionFlashcardComponent","constructor","_collectionFlashcardService","_http","_router","collectionFlashcards","listFilter","_listFilter","value","console","log","filteredCollectionFlashcards","performFilter","getCollections","subscribe","data","JSON","stringify","filterBy","toLowerCase","filteredCollections","filter","collections","flashcardId","name","includes","toggleImage","displayImage","navigateToCollectionform","navigate","ngOnInit","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcards.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ICollectionFlashcard } from './collectionFlashcard';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CollectionFlashcardService } from \"./collectionFlashcards.service\";\r\n\r\n@Component({\r\n  selector: 'app-collections-component',\r\n  templateUrl: './collections.component.html',\r\n  styles: ['thead {color: blue;}']\r\n})\r\n  export class CollectionFlashcardComponent implements OnInit {\r\n    viewTitle: string = 'Table'\r\n    displayImage: boolean = true;\r\n    collectionFlashcards: ICollectionFlashcard[] = [];\r\n\r\n  constructor(private _collectionFlashcardService: CollectionFlashcardService, private _http: HttpClient, private _router: Router) { }\r\n\r\n    private _listFilter: string = '';\r\n    get listFilter(): string {\r\n      return this._listFilter;\r\n    }\r\n    set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      console.log('In setter:', value)\r\n      this.filteredCollectionFlashcards = this.performFilter(value);\r\n    }\r\n\r\n  getCollections(): void {\r\n    this._collectionFlashcardService.getCollections().subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      console.log()\r\n      this.collectionFlashcards = data;\r\n      this.filteredCollectionFlashcards = this.collectionFlashcards;\r\n      })\r\n    }\r\n\r\n  //  deleteCollection(collection: ICollectionFlashcard): void {\r\n  //    const confirmDelete = confirm(`Are you sure you want to delete \"${collection.collectionName}\"?`);\r\n  //    if (confirmDelete) {\r\n  //      this._collectionService.deleteCollection(collection.collectionId)\r\n  //        .subscribe(\r\n  //          (response) => {\r\n  //            if (response.success) {\r\n  //              console.log(response.message);\r\n  //              this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\r\n  //              // Update collections\r\n  //              this.getCollections();\r\n  //            }\r\n  //          },\r\n  //          (error) => {\r\n  //            console.error('Error deleting collection', error);\r\n  //          });\r\n\r\n  //    }\r\n  //}\r\n  filteredCollections: ICollectionFlashcard[] = this.collectionFlashcards;\r\n\r\n  performFilter(filterBy: string): ICollectionFlashcard[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    console.log(\"Performing filter on \", this.filteredCollections)\r\n    return this.collectionFlashcards.filter((collections: ICollectionFlashcard) =>\r\n      this.collectionFlashcards.flashcardId.name.toLowerCase().includes(filterBy));\r\n  }\r\n\r\n  toggleImage(): void {\r\n    this.displayImage = !this.displayImage;\r\n  }\r\n\r\n  navigateToCollectionform() {\r\n    this._router.navigate(['/collectionform'])\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('CollectionConponent created');\r\n    this.getCollections();\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}