{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContributersComponent = class ContributersComponent {\n  constructor(_contributerService, _collectionService, _http, _router) {\n    this._contributerService = _contributerService;\n    this._collectionService = _collectionService;\n    this._http = _http;\n    this._router = _router;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    this.contributers = [];\n    this.collections = [];\n    this._listFilter = '';\n    this.filteredContributers = this.contributers;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredContributers = this.performFilter(value);\n  }\n  getContributers() {\n    this._contributerService.getContributers().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      console.log();\n      this.contributers = data;\n      this.filteredContributers = this.contributers;\n    });\n  }\n  getCollections() {\n    this._collectionService.getCollections().subscribe(data => {\n      console.log('All COLLECTIONS', JSON.stringify(data));\n      console.log();\n      this.collections = data;\n      this.filteredContributers = this.contributers;\n    });\n  }\n  deleteContributer(contributer) {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${contributer.name}\"?`);\n    if (confirmDelete) {\n      this._contributerService.deleteContributer(contributer.contributerId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this.filteredContributers = this.filteredContributers.filter(i => i !== contributer);\n          // Update contributers\n          this.getContributers();\n        }\n      }, error => {\n        console.error('Error deleting contributer', error);\n      });\n    }\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLowerCase();\n    console.log(\"Performing filter on \", this.filteredContributers);\n    return this.contributers.filter(contributers => contributers.name.toLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToContributerform() {\n    this._router.navigate(['/contributerform']);\n  }\n  ngOnInit() {\n    console.log('ContributerConponent created');\n    this.getContributers();\n    this.getCollections();\n  }\n};\nContributersComponent = __decorate([Component({\n  selector: 'app-contributers-component',\n  templateUrl: './contributers.component.html',\n  styles: ['thead {color: blue;}']\n})], ContributersComponent);\nexport { ContributersComponent };","map":{"version":3,"mappings":"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","names":["Component","ContributersComponent","constructor","_contributerService","_collectionService","_http","_router","contributers","listFilter","_listFilter","value","console","log","filteredContributers","performFilter","getContributers","subscribe","data","JSON","stringify","getCollections","collections","deleteContributer","contributer","confirmDelete","confirm","name","contributerId","response","success","message","filter","i","error","filterBy","toLowerCase","includes","toggleImage","displayImage","navigateToContributerform","navigate","ngOnInit","selector","templateUrl","styles"],"sourceRoot":"","sources":["C:\\Users\\William\\Source\\Repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Contributers\\contributers.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { IContributer } from './contributer';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ContributerService } from \"./contributers.service\";\r\nimport { CollectionService } from \"../Collections/collections.service\";\r\nimport { ICollection } from '../Collections/collection';\r\n\r\n@Component({\r\n  selector: 'app-contributers-component',\r\n  templateUrl: './contributers.component.html',\r\n  styles: ['thead {color: blue;}']\r\n})\r\n  export class ContributersComponent implements OnInit {\r\n    viewTitle: string = 'Table'\r\n    displayImage: boolean = true;\r\n    contributers: IContributer[] = [];\r\n    collections: ICollection[] = [];\r\n\r\n\r\n  constructor(private _contributerService: ContributerService, private _collectionService: CollectionService, private _http: HttpClient, private _router: Router) { }\r\n\r\n    private _listFilter: string = '';\r\n    get listFilter(): string {\r\n      return this._listFilter;\r\n    }\r\n    set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      console.log('In setter:', value)\r\n      this.filteredContributers = this.performFilter(value);\r\n    }\r\n\r\n  getContributers(): void {\r\n    this._contributerService.getContributers().subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      console.log()\r\n      this.contributers = data;\r\n      this.filteredContributers = this.contributers;\r\n    })\r\n  }\r\n\r\n  getCollections(): void {\r\n    this._collectionService.getCollections().subscribe(data => {\r\n      console.log('All COLLECTIONS', JSON.stringify(data));\r\n      console.log()\r\n      this.collections = data;\r\n      this.filteredContributers = this.contributers;\r\n    })\r\n  }\r\n\r\n    deleteContributer(contributer: IContributer): void {\r\n      const confirmDelete = confirm(`Are you sure you want to delete \"${contributer.name}\"?`);\r\n      if (confirmDelete) {\r\n        this._contributerService.deleteContributer(contributer.contributerId)\r\n          .subscribe(\r\n            (response) => {\r\n              if (response.success) {\r\n                console.log(response.message);\r\n                this.filteredContributers = this.filteredContributers.filter(i => i !== contributer);\r\n                // Update contributers\r\n                this.getContributers();\r\n              }\r\n            },\r\n            (error) => {\r\n              console.error('Error deleting contributer', error);\r\n            });\r\n\r\n      }\r\n  }\r\n  filteredContributers: IContributer[] = this.contributers;\r\n\r\n  performFilter(filterBy: string): IContributer[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    console.log(\"Performing filter on \", this.filteredContributers)\r\n    return this.contributers.filter((contributers: IContributer) =>\r\n      contributers.name.toLowerCase().includes(filterBy));\r\n  }\r\n\r\n  toggleImage(): void {\r\n    this.displayImage = !this.displayImage;\r\n  }\r\n\r\n  navigateToContributerform() {\r\n    this._router.navigate(['/contributerform'])\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('ContributerConponent created');\r\n    this.getContributers();\r\n    this.getCollections();\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}