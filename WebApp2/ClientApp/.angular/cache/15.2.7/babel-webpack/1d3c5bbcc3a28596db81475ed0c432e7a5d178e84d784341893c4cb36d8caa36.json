{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./flashcards.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class FlashcardformComponent {\n  constructor(_flashcardService, _formbuilder, _router, _route) {\n    this._flashcardService = _flashcardService;\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this.isEditMode = false;\n    this.flashcardId = -1;\n    this.flashcardForm = _formbuilder.group({\n      name: ['', Validators.required],\n      description: ['']\n      /*      imageUrl: ['']*/\n    });\n  }\n\n  onSubmit() {\n    console.log(\"FlashcardCreate form submitted:\");\n    console.log(this.flashcardForm);\n    console.log(\"The flaschard \" + this.flashcardForm.value.name + \" is created.\");\n    console.log(this.flashcardForm.touched);\n    const newFlashcard = this.flashcardForm.value;\n    if (this.isEditMode) {\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/flashcards']);\n        } else {\n          console.log('Flashcard update failed');\n        }\n      });\n    } else {\n      this._flashcardService.createFlashcard(newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/flashcards']);\n        } else {\n          console.log('Flashcards creation failed');\n        }\n      });\n    }\n  }\n  backToFlashcards() {\n    this._router.navigate(['/flashcards']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.flashcardId = +params['id']; // Convert to number\n        this.loadFlashcardForEdit(this.flashcardId);\n      }\n    });\n  }\n  loadFlashcardForEdit(flashcardId) {\n    this._flashcardService.getFlashcardById(this.flashcardId).subscribe(flashcard => {\n      console.log('retrived flashcard: ', flashcard);\n      this.flashcardForm.patchValue({\n        name: flashcard.name,\n        description: flashcard.description,\n        imageUrl: flashcard.imageUrl\n      });\n    }, error => {\n      console.error('Error loading flashcard for edit:', error);\n    });\n  }\n}\nFlashcardformComponent.ɵfac = function FlashcardformComponent_Factory(t) {\n  return new (t || FlashcardformComponent)(i0.ɵɵdirectiveInject(i1.FlashcardService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nFlashcardformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashcardformComponent,\n  selectors: [[\"app-flashcards-flashcardform\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn-primary\", \"btn\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function FlashcardformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FlashcardformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"textarea\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function FlashcardformComponent_Template_button_click_17_listener() {\n        return ctx.backToFlashcards();\n      });\n      i0.ɵɵtext(18, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Flashcard\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.flashcardForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"disabled\", ctx.flashcardForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Flashcard\");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","FlashcardformComponent","constructor","_flashcardService","_formbuilder","_router","_route","flashcardForm","group","name","required","description","onSubmit","console","log","value","touched","newFlashcard","isEditMode","updateFlashcard","flashcardId","subscribe","response","success","message","navigate","createFlashcard","backToFlashcards","ngOnInit","params","loadFlashcardForEdit","getFlashcardById","flashcard","patchValue","imageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Flashcards\\flashcardform.component.ts","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Flashcards\\flashcardform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FlashcardService } from './flashcards.service';\r\n\r\n@Component({\r\n  selector: \"app-flashcards-flashcardform\",\r\n  templateUrl: \"./flashcardform.component.html\"\r\n})\r\n\r\nexport class FlashcardformComponent {\r\n  flashcardForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  flashcardId: number = -1;\r\n\r\n  constructor(private _flashcardService: FlashcardService, private _formbuilder: FormBuilder, private _router: Router, private _route: ActivatedRoute) {\r\n    this.flashcardForm = _formbuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n/*      imageUrl: ['']*/\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"FlashcardCreate form submitted:\");\r\n    console.log(this.flashcardForm);\r\n    console.log(\"The flaschard \" + this.flashcardForm.value.name + \" is created.\");\r\n    console.log(this.flashcardForm.touched);\r\n    const newFlashcard = this.flashcardForm.value;\r\n\r\n    if (this.isEditMode) {\r\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/flashcards']);\r\n          }\r\n          else {\r\n            console.log('Flashcard update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._flashcardService.createFlashcard(newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/flashcards']);\r\n          }\r\n          else {\r\n            console.log('Flashcards creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToFlashcards() {\r\n    this._router.navigate(['/flashcards']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.flashcardId = +params['id']; // Convert to number\r\n        this.loadFlashcardForEdit(this.flashcardId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadFlashcardForEdit(flashcardId: number) {\r\n    this._flashcardService.getFlashcardById(this.flashcardId)\r\n      .subscribe(\r\n        (flashcard: any) => {\r\n          console.log('retrived flashcard: ', flashcard);\r\n          this.flashcardForm.patchValue({\r\n            name: flashcard.name,\r\n            description: flashcard.description,\r\n            imageUrl: flashcard.imageUrl\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading flashcard for edit:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>{{isEditMode ? 'Update' : 'Create'}} Flashcard</h2>\r\n\r\n<form [formGroup]=\"flashcardForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"description\">Description:</label>\r\n    <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"imageUrl\">Image URL:</label>\r\n    <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\r\n  </div>\r\n  <button class=\"btn-primary btn\" type=\"submit\" [disabled]=\"flashcardForm.invalid\">{{isEditMode ? 'Update' : 'Create'}} Flashcard</button>\r\n  <button class=\"btn btn-secondary\" (click)=\"backToFlashcards()\">Cancel</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}