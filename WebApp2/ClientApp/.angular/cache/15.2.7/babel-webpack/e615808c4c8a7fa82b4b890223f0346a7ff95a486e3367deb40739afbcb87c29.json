{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./collections.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class CollectionsComponent {\n  constructor(_collectionService, _http, _router) {\n    this._collectionService = _collectionService;\n    this._http = _http;\n    this._router = _router;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    // listFilter: string = '';\n    this.collections = [];\n    this._listFilter = '';\n    this.filteredCollections = this.collections;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredCollections = this.performFilter(value);\n  }\n  getCollections() {\n    this._collectionService.getCollections().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      console.log(data);\n      this.collections = data;\n      this.filteredCollections = this.collections;\n    });\n  }\n  deleteCollection(collection) {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${collection.CollectionName}\"?`);\n    if (confirmDelete) {\n      this._collectionService.deleteCollection(collection.CollectionId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\n        }\n      }, error => {\n        console.error('Error deleting collection', error);\n      });\n    }\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLowerCase();\n    return this.collections.filter(collections => collections.CollectionName.toLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToCollectionform() {\n    this._router.navigate(['/collectionform']);\n  }\n  ngOnInit() {\n    console.log('CollectionConponent created');\n    this.getCollections();\n  }\n}\nCollectionsComponent.ɵfac = function CollectionsComponent_Factory(t) {\n  return new (t || CollectionsComponent)(i0.ɵɵdirectiveInject(i1.CollectionService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nCollectionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CollectionsComponent,\n  selectors: [[\"app-collections-component\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[\"id\", \"tableLabel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"ngFor\", \"let collection of collections\"]],\n  template: function CollectionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CollectionsComponent_Template_button_click_2_listener() {\n        return ctx.getCollections();\n      });\n      i0.ɵɵtext(3, \"Get Collections\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Collection Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Collection Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Contributer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\")(14, \"h6\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CollectionsComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\")(20, \"tr\", 4)(21, \"td\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"td\");\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Collections(\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.collection.CollectionId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.collection.CollectionName);\n    }\n  },\n  dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"thead[_ngcontent-%COMP%] {color: blue;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29sbGVjdGlvbnMvY29sbGVjdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sV0FBVyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsidGhlYWQge2NvbG9yOiBibHVlO30iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["CollectionsComponent","constructor","_collectionService","_http","_router","collections","listFilter","_listFilter","value","console","log","filteredCollections","performFilter","getCollections","subscribe","data","JSON","stringify","deleteCollection","collection","confirmDelete","confirm","CollectionName","CollectionId","response","success","message","filter","i","error","filterBy","toLowerCase","includes","toggleImage","displayImage","navigateToCollectionform","navigate","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Collections\\collections.component.ts","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Collections\\collections.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ICollection } from './collection';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CollectionService } from \"./collections.service\";\r\n\r\n@Component({\r\n  selector: 'app-collections-component',\r\n  templateUrl: './collections.component.html',\r\n  styles: ['thead {color: blue;}']\r\n})\r\n  export class CollectionsComponent {\r\n    viewTitle: string = 'Table'\r\n    displayImage: boolean = true;\r\n    // listFilter: string = '';\r\n    collections: ICollection[] = []; \r\n\r\n  constructor(private _collectionService: CollectionService, private _http: HttpClient, private _router: Router) { }\r\n\r\n    private _listFilter: string = '';\r\n    get listFilter(): string {\r\n      return this._listFilter;\r\n    }\r\n    set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      console.log('In setter:', value)\r\n      this.filteredCollections = this.performFilter(value);\r\n    }\r\n\r\n  getCollections(): void {\r\n    this._collectionService.getCollections().subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n        console.log(data)\r\n        this.collections = data;\r\n        this.filteredCollections = this.collections;\r\n      })\r\n    }\r\n\r\n    deleteCollection(collection: ICollection): void {\r\n      const confirmDelete = confirm(`Are you sure you want to delete \"${collection.CollectionName}\"?`);\r\n      if (confirmDelete) {\r\n        this._collectionService.deleteCollection(collection.CollectionId)\r\n          .subscribe(\r\n            (response) => {\r\n              if (response.success) {\r\n                console.log(response.message);\r\n                this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\r\n              }\r\n            },\r\n            (error) => {\r\n              console.error('Error deleting collection', error);\r\n            });\r\n\r\n      }\r\n  }\r\n  filteredCollections: ICollection[] = this.collections;\r\n\r\n  performFilter(filterBy: string): ICollection[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    return this.collections.filter((collections: ICollection) =>\r\n      collections.CollectionName.toLowerCase().includes(filterBy));\r\n  }\r\n\r\n  toggleImage(): void {\r\n    this.displayImage = !this.displayImage;\r\n  }\r\n\r\n  navigateToCollectionform() {\r\n    this._router.navigate(['/collectionform'])\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('CollectionConponent created');\r\n    this.getCollections();\r\n  }\r\n\r\n}\r\n","<h1 id=\"tableLabel\">List of Collections({{viewTitle}} View)</h1>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"getCollections()\">Get Collections</button>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Collection Id</th>\r\n      <th>Collection Name</th>\r\n      <th>Contributer Name</th>\r\n      <th>\r\n        <h6>Filtered by: {{listFilter}}</h6>\r\n        <input type='text' [(ngModel)]='listFilter' />\r\n      </th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr ngFor='let collection of collections'>\r\n      <td>{{ collection.CollectionId}}</td>\r\n      <td>{{ collection.CollectionName }}</td>\r\n      <!--<td>{{ collection.Contributer.Name }}</td>-->\r\n      <!--<td>\r\n        <a [routerLink]=\"['/collectionform', 'edit', collection.CollectionId]\">Update</a> \r\n        <a class=\"delete-link\" (click)=\"deleteCollection(collection)\" style=\"cursor: pointer;\"> Delete </a>\r\n      </td>-->\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!--<button class=\"btn btn-primary\" (click)=\"navigateToCollectionform()\">Create new Collection</button>-->\r\n<!--<button class=\"btn btn-primary\" [routerLink]=\"['/collectionform', 'create', -1]\">Create new Collection</button>-->\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}