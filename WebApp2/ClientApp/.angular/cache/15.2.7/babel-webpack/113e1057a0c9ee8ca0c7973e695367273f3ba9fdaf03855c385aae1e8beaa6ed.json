{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Flashcards/flashcards.service\";\nimport * as i2 from \"./collectionFlashcards.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction CollectionFlashcardFormComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const flashcard_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", flashcard_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", flashcard_r1.flashcardId, \". Term: \", flashcard_r1.name, \", Description: \", flashcard_r1.description, \" \");\n  }\n}\n;\nexport class CollectionFlashcardFormComponent {\n  constructor(_flashcardService, _collectionFlashcardService, _formbuilder, _router, _route) {\n    this._flashcardService = _flashcardService;\n    this._collectionFlashcardService = _collectionFlashcardService;\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this.collectionFlashcards = [];\n    this.flashcards = [];\n    this.collectionId = 0;\n    this.collectionFlashcardForm = _formbuilder.group({\n      collectionFlashcards: [''],\n      flashcards: ['', Validators.required],\n      collectionId: this.collectionId\n    });\n    // Automatic data insertion\n    forkJoin([this._flashcardService.getFlashcards()]).subscribe(([flashcards]) => {\n      this.flashcards = flashcards;\n      console.log(\"Retrieved flashcards: \", flashcards);\n      this.collectionFlashcardForm.patchValue({\n        flashcards: []\n      });\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  onSubmit() {\n    console.log(\"Selected Flashcard: \", this.collectionFlashcardForm.value);\n    var newCollectionFlashcards = [];\n    for (let selectedFlashcard of this.collectionFlashcardForm.value) {\n      this.collectionFlashcards.push({\n        flashcardId: selectedFlashcard.flashcardId,\n        collectionId: selectedFlashcard.collectionId\n      });\n    }\n    /*newCollectionFlashcards.push(collectionFlashcard)*/\n    console.log(\"Created collectionFlashcard Real \", this.collectionFlashcards);\n  }\n  handleResponse(response) {\n    if (response.success) {\n      console.log(response.message);\n      this._router.navigate(['/collections']);\n    } else {\n      console.log('Collection operation failed');\n    }\n  }\n  backToCollections() {\n    this._router.navigate(['/collections']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      this.collectionId = +params['id']; // Convert to number\n      console.log(\"this.collectionId = \", this.collectionId);\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(cf => {\n        this.collectionFlashcards = cf;\n      });\n    });\n  }\n  loadCollectionFlashcardsByCollectionId(collectionId) {\n    this._collectionFlashcardService.getCollectionFlashcardByCollectionId(collectionId).subscribe(collectionFlashcard => {\n      console.log('retrieved collectionFlashcard: ', collectionFlashcard);\n      this.collectionFlashcardForm.patchValue({\n        flashcardId: collectionFlashcard.flashcardId,\n        collectionId: collectionFlashcard.collectionId\n      });\n    }, error => {\n      console.error('Error loading collection for edit:', error);\n    });\n  }\n}\nCollectionFlashcardFormComponent.ɵfac = function CollectionFlashcardFormComponent_Factory(t) {\n  return new (t || CollectionFlashcardFormComponent)(i0.ɵɵdirectiveInject(i1.FlashcardService), i0.ɵɵdirectiveInject(i2.CollectionFlashcardService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nCollectionFlashcardFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CollectionFlashcardFormComponent,\n  selectors: [[\"app-collectionsFlashcards-collectionflashcardform\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"collectionFlashcard\"], [\"formControlName\", \"flashcards\", \"multiple\", \"\", 2, \"width\", \"500px\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-primary\", \"btn\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"ngValue\"]],\n  template: function CollectionFlashcardFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add Flashcard to Collection\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CollectionFlashcardFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Add flashcards:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"select\", 3);\n      i0.ɵɵtemplate(8, CollectionFlashcardFormComponent_option_8_Template, 2, 4, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Add Flashcard to Collection\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function CollectionFlashcardFormComponent_Template_button_click_11_listener() {\n        return ctx.backToCollections();\n      });\n      i0.ɵɵtext(12, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.collectionFlashcardForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flashcards);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.collectionFlashcardForm.invalid);\n    }\n  },\n  dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectMultipleControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","forkJoin","i0","CollectionFlashcardFormComponent","constructor","_flashcardService","_collectionFlashcardService","_formbuilder","_router","_route","collectionFlashcardForm","group","collectionFlashcards","flashcards","required","collectionId","getFlashcards","subscribe","console","log","patchValue","error","onSubmit","value","newCollectionFlashcards","selectedFlashcard","push","flashcardId","handleResponse","response","success","message","navigate","backToCollections","ngOnInit","params","getCollectionFlashcard","cf","loadCollectionFlashcardsByCollectionId","getCollectionFlashcardByCollectionId","collectionFlashcard","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcardform.component.ts","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcardform.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IFlashcard } from '../Flashcards/flashcard';;\r\nimport { ICollection } from '../Collections/collection';\r\nimport { ICollectionFlashcard } from './collectionFlashcard';\r\nimport { CollectionFlashcardService } from './collectionFlashcards.service';\r\nimport { FlashcardService } from '../Flashcards/flashcards.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: \"app-collectionsFlashcards-collectionflashcardform\",\r\n  templateUrl: \"./collectionFlashcardform.component.html\"\r\n})\r\n\r\nexport class CollectionFlashcardFormComponent implements OnInit{\r\n  collectionFlashcardForm: FormGroup;\r\n  collectionFlashcards: ICollectionFlashcard[] = [];\r\n  flashcards: IFlashcard[] = [];\r\n  collectionId: number = 0;\r\n\r\n  constructor(\r\n    private _flashcardService: FlashcardService,\r\n    private _collectionFlashcardService: CollectionFlashcardService,\r\n    private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) {\r\n    this.collectionFlashcardForm = _formbuilder.group({\r\n      collectionFlashcards: [''],\r\n      flashcards: ['', Validators.required],\r\n      collectionId: this.collectionId,\r\n    })\r\n\r\n\r\n    // Automatic data insertion\r\n    forkJoin([\r\n      this._flashcardService.getFlashcards(),\r\n    ]).subscribe(\r\n      ([flashcards]) => {\r\n        this.flashcards = flashcards;\r\n        console.log(\"Retrieved flashcards: \", flashcards)\r\n        this.collectionFlashcardForm.patchValue({\r\n          flashcards: [],\r\n\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"Selected Flashcard: \", this.collectionFlashcardForm.value);\r\n\r\n    var newCollectionFlashcards: ICollectionFlashcard[] = [];\r\n\r\n    for (let selectedFlashcard of this.collectionFlashcardForm.value) {\r\n      this.collectionFlashcards.push({\r\n        flashcardId: selectedFlashcard.flashcardId,\r\n        collectionId: selectedFlashcard.collectionId,\r\n      })\r\n      \r\n    }\r\n    /*newCollectionFlashcards.push(collectionFlashcard)*/\r\n\r\n      console.log(\"Created collectionFlashcard Real \", this.collectionFlashcards);\r\n    }\r\n\r\n\r\n  private handleResponse(response: any) {\r\n    if (response.success) {\r\n      console.log(response.message);\r\n      this._router.navigate(['/collections']);\r\n    } else {\r\n      console.log('Collection operation failed');\r\n    }\r\n  }\r\n\r\n  backToCollections() {\r\n    this._router.navigate(['/collections']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      this.collectionId = +params['id']; // Convert to number\r\n      console.log(\"this.collectionId = \", this.collectionId)\r\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(cf => {\r\n        this.collectionFlashcards = cf;\r\n      })\r\n      })\r\n  }\r\n\r\n\r\n\r\n  loadCollectionFlashcardsByCollectionId(collectionId: number) {\r\n    this._collectionFlashcardService.getCollectionFlashcardByCollectionId(collectionId)\r\n      .subscribe(\r\n        (collectionFlashcard: any) => {\r\n          console.log('retrieved collectionFlashcard: ', collectionFlashcard)\r\n          this.collectionFlashcardForm.patchValue({\r\n            flashcardId: collectionFlashcard.flashcardId,\r\n            collectionId: collectionFlashcard.collectionId,\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading collection for edit:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>Add Flashcard to Collection</h2>\r\n\r\n<form [formGroup]=\"collectionFlashcardForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"collectionFlashcard\">Add flashcards:</label>\r\n    <br />\r\n\r\n    <select formControlName=\"flashcards\" multiple style=\"width: 500px;\">\r\n      <option *ngFor=\"let flashcard of flashcards\" [ngValue]=\"flashcard\">\r\n        {{flashcard.flashcardId}}. Term: {{flashcard.name}}, Description: {{flashcard.description}}\r\n      </option>\r\n    </select>\r\n\r\n    <!--<select multiple style=\"width: 500px;\">\r\n    <option *ngFor=\"let collectionflashcard of collectionFlashcards\" [ngValue]=\"collectionflashcard\">\r\n    {{collectionflashcard.flashcard.flashcardId}}.\r\n    Term: {{collectionflashcard.flashcard.name}},\r\n    Description: {{collectionflashcard.flashcard.description}}</option>\r\n  </select>-->\r\n  </div>\r\n\r\n  <button class=\"btn-primary btn\" type=\"submit\" [disabled]=\"collectionFlashcardForm.invalid\">Add Flashcard to Collection</button>\r\n  <button class=\"btn btn-secondary\" (click)=\"backToCollections()\">Cancel</button>\r\n\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}