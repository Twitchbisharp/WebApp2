{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Flashcards/flashcards.service\";\nimport * as i2 from \"../CollectionFlashcard/collectionFlashcards.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PlayComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cf_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cf_r1.flashcard.name);\n  }\n}\nfunction PlayComponent_div_7_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 8);\n  }\n  if (rf & 2) {\n    const cf_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", cf_r1.flashcard.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PlayComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cf_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cf_r1.flashcard.description);\n  }\n}\nfunction PlayComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_7_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.flipCard());\n    });\n    i0.ɵɵtemplate(1, PlayComponent_div_7_div_1_Template, 2, 1, \"div\", 6);\n    i0.ɵɵtemplate(2, PlayComponent_div_7_img_2_Template, 1, 1, \"img\", 7);\n    i0.ɵɵtemplate(3, PlayComponent_div_7_div_3_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cf_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", \"collectionFlashcard\" + i_r2)(\"hidden\", ctx_r0.currentIndex !== i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.dynamicProperties[i_r2].showBack);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.dynamicProperties[i_r2].showBack && cf_r1.flashcard.imageUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dynamicProperties[i_r2].showBack);\n  }\n}\nexport class PlayComponent {\n  constructor(flashcardService, _collectionFlashcardService, _route) {\n    this.flashcardService = flashcardService;\n    this._collectionFlashcardService = _collectionFlashcardService;\n    this._route = _route;\n    this.flashcards = [];\n    this.currentIndex = 0;\n    this.collectionId = 0;\n    this.collectionFlashcards = [];\n    this.dynamicProperties = [];\n  }\n  ngOnInit() {\n    this.loadFlashcards();\n    console.log(\"here is the flashcards after load\", this.flashcards);\n  }\n  loadFlashcards() {\n    this._route.params.subscribe(params => {\n      this.collectionId = params['id'];\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(collectionFlashcards => {\n        console.log(\"\", collectionFlashcards[0].collectionId);\n        for (let cf of collectionFlashcards) {\n          if (cf.collectionId == this.collectionId) {\n            // Add a separate object for dynamic properties\n            const dynamicProperty = {\n              showBack: false\n            };\n            this.dynamicProperties.push(dynamicProperty);\n            // Merge dynamic property into collectionFlashcard\n            cf = {\n              ...cf,\n              ...dynamicProperty\n            };\n            this.collectionFlashcards.push(cf);\n          }\n        }\n      });\n    });\n  }\n  showPreviousFlashcard() {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n      this.resetCardSide();\n    }\n  }\n  showNextFlashcard() {\n    if (this.currentIndex < this.collectionFlashcards.length - 1) {\n      this.currentIndex++;\n      this.resetCardSide();\n    }\n  }\n  flipCard() {\n    this.dynamicProperties[this.currentIndex].showBack = !this.dynamicProperties[this.currentIndex].showBack;\n  }\n  resetCardSide() {\n    this.dynamicProperties.forEach(dp => dp.showBack = false);\n  }\n}\nPlayComponent.ɵfac = function PlayComponent_Factory(t) {\n  return new (t || PlayComponent)(i0.ɵɵdirectiveInject(i1.FlashcardService), i0.ɵɵdirectiveInject(i2.CollectionFlashcardService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nPlayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlayComponent,\n  selectors: [[\"play\"]],\n  inputs: {\n    flashcards: \"flashcards\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: [[\"id\", \"title\"], [1, \"playbuttons\"], [1, \"prevbutton\", 3, \"disabled\", \"click\"], [1, \"nextbutton\", 3, \"disabled\", \"click\"], [\"class\", \"collectionflashcard\", 3, \"id\", \"hidden\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"collectionflashcard\", 3, \"id\", \"hidden\", \"click\"], [4, \"ngIf\"], [\"alt\", \"Flashcard Image\", \"class\", \"img-fluid\", \"width\", \"250px\", 3, \"src\", 4, \"ngIf\"], [\"alt\", \"Flashcard Image\", \"width\", \"250px\", 1, \"img-fluid\", 3, \"src\"]],\n  template: function PlayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function PlayComponent_Template_button_click_3_listener() {\n        return ctx.showPreviousFlashcard();\n      });\n      i0.ɵɵtext(4, \"Previous Flashcard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function PlayComponent_Template_button_click_5_listener() {\n        return ctx.showNextFlashcard();\n      });\n      i0.ɵɵtext(6, \"Next Flashcard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, PlayComponent_div_7_Template, 4, 5, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.collectionFlashcards[0].collection.collectionName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.currentIndex === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.currentIndex === ctx.flashcards.length - 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.collectionFlashcards);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","PlayComponent","constructor","flashcardService","_collectionFlashcardService","_route","ngOnInit","loadFlashcards","console","log","flashcards","params","subscribe","collectionId","getCollectionFlashcard","collectionFlashcards","cf","dynamicProperty","showBack","dynamicProperties","push","showPreviousFlashcard","currentIndex","resetCardSide","showNextFlashcard","length","flipCard","forEach","dp","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\William\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Play\\play.component.html","C:\\Users\\William\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Play\\play.component.ts"],"sourcesContent":["<!----------------------------------------------------- play.component.html -->\r\n\r\n<h1 id=\"title\">{{ collectionFlashcards[0].collection.collectionName }}</h1>\r\n<div class=\"playbuttons\">\r\n  <button class=\"prevbutton\" (click)=\"showPreviousFlashcard()\" [disabled]=\"currentIndex === 0\">Previous Flashcard</button>\r\n  <button class=\"nextbutton\" (click)=\"showNextFlashcard()\" [disabled]=\"currentIndex === flashcards.length - 1\">Next Flashcard</button>\r\n</div>\r\n<div *ngFor=\"let cf of collectionFlashcards; let i = index\" [id]=\"'collectionFlashcard' + i\" class=\"collectionflashcard\" [hidden]=\"currentIndex !== i\" (click)=\"flipCard()\">\r\n  <div *ngIf=\"!dynamicProperties[i].showBack\">{{ cf.flashcard.name }}</div>\r\n  <img *ngIf=\"!dynamicProperties[i].showBack && cf.flashcard.imageUrl\" [src]=\"cf.flashcard.imageUrl\" alt=\"Flashcard Image\" class=\"img-fluid\" width=\"250px\">\r\n  <div *ngIf=\"dynamicProperties[i].showBack\">{{ cf.flashcard.description }}</div>\r\n</div>\r\n\r\n\r\n<!--<h1 id=\"title\">{{ collectionFlashcards[0].collection.collectionName }}</h1>\r\n\r\n<div *ngFor=\"let cf of collectionFlashcards; let i = index\" [id]=\"'collectionFlashcard' + i\" class=\"collectionflashcard\" [hidden]=\"currentIndex !== i\">\r\n  <div>{{ cf.flashcard.name }}</div>\r\n  <img *ngIf=\"cf.flashcard.imageUrl\" [src]=\"cf.flashcard.imageUrl\" alt=\"Flashcard Image\" class=\"img-fluid\" width=\"250px\">\r\n  <div>{{ cf.flashcard.description }}</div>\r\n</div>\r\n\r\n<button (click)=\"showPreviousFlashcard()\" [disabled]=\"currentIndex === 0\">Previous Flashcard</button>\r\n<button (click)=\"showNextFlashcard()\" [disabled]=\"currentIndex === flashcards.length - 1\">Next Flashcard</button>-->\r\n<!--<div id=\"carouselExampleControls\" class=\"carousel slide\">\r\n  <div class=\"carousel-inner\">\r\n    <div *ngFor=\"let cf of flashcards; let i = index\" [id]=\"'term' + i\" class=\"carousel-item text-center\"\r\n         style=\"background-color: skyblue; cursor: pointer;\" (click)=\"flip(i)\">\r\n      <div>{{ cf.name }}</div>\r\n      <img *ngIf=\"cf.imageUrl\" [src]=\"cf.imageUrl\" alt=\"Flashcard Image\" class=\"img-fluid\">\r\n    </div>\r\n  </div>\r\n  <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">Previous</span>\r\n  </a>\r\n  <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">Next</span>\r\n  </a>\r\n</div>-->\r\n","///////////////////////////////////////////////////////////////////// play.component.ts\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlashcardService } from '../Flashcards/flashcards.service';\r\nimport { CollectionFlashcardService } from \"../CollectionFlashcard/collectionFlashcards.service\";\r\nimport { ICollectionFlashcard } from \"../CollectionFlashcard/collectionFlashcard\";\r\n\r\n@Component({\r\n  selector: 'play',\r\n  templateUrl: './play.component.html',\r\n})\r\nexport class PlayComponent implements OnInit {\r\n  @Input() flashcards: any[] = [];\r\n  currentIndex: number = 0;\r\n  collectionId: number = 0;\r\n  collectionFlashcards: ICollectionFlashcard[] = [];\r\n\r\n  constructor(private flashcardService: FlashcardService, private _collectionFlashcardService: CollectionFlashcardService, private _route: ActivatedRoute) { }\r\n\r\n  dynamicProperties: { showBack: boolean }[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.loadFlashcards();\r\n    console.log(\"here is the flashcards after load\", this.flashcards);\r\n  }\r\n\r\n  loadFlashcards(): void {\r\n    this._route.params.subscribe(params => {\r\n      this.collectionId = params['id']\r\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(collectionFlashcards => {\r\n        console.log(\"\", collectionFlashcards[0].collectionId)\r\n        for (let cf of collectionFlashcards) {\r\n          if (cf.collectionId == this.collectionId) {\r\n            // Add a separate object for dynamic properties\r\n            const dynamicProperty = { showBack: false };\r\n            this.dynamicProperties.push(dynamicProperty);\r\n\r\n            // Merge dynamic property into collectionFlashcard\r\n            cf = { ...cf, ...dynamicProperty };\r\n\r\n            this.collectionFlashcards.push(cf);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  showPreviousFlashcard(): void {\r\n    if (this.currentIndex > 0) {\r\n      this.currentIndex--;\r\n      this.resetCardSide();\r\n    }\r\n  }\r\n\r\n  showNextFlashcard(): void {\r\n    if (this.currentIndex < this.collectionFlashcards.length - 1) {\r\n      this.currentIndex++;\r\n      this.resetCardSide();\r\n    }\r\n  }\r\n\r\n  flipCard(): void {\r\n    this.dynamicProperties[this.currentIndex].showBack = !this.dynamicProperties[this.currentIndex].showBack;\r\n  }\r\n\r\n  resetCardSide(): void {\r\n    this.dynamicProperties.forEach(dp => dp.showBack = false);\r\n  }\r\n\r\n}\r\n\r\n//import { Component, Input, OnInit } from '@angular/core';\r\n//import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n//import { HttpClientModule } from '@angular/common/http';\r\n//import { ActivatedRoute } from \"@angular/router\";\r\n//import { RouterModule } from '@angular/router';\r\n//import { FlashcardService } from '../Flashcards/flashcards.service';\r\n//import { CollectionFlashcardService } from \"../CollectionFlashcard/collectionFlashcards.service\";\r\n//import { ICollectionFlashcard } from \"../CollectionFlashcard/collectionFlashcard\";\r\n\r\n\r\n//@Component({\r\n//  selector: 'play',\r\n//  templateUrl: './play.component.html',\r\n//})\r\n//export class PlayComponent implements OnInit {\r\n//  @Input() flashcards: any[] = [];\r\n//  currentIndex: number = 0;\r\n//  collectionId: number = 0;\r\n//  collectionFlashcards: ICollectionFlashcard[] = [];\r\n\r\n//  constructor(private flashcardService: FlashcardService, private _collectionFlashcardService: CollectionFlashcardService, private _route: ActivatedRoute) { }\r\n\r\n//  ngOnInit(): void\r\n//  {\r\n//    this.loadFlashcards();\r\n//    console.log(\"here is the flashcards after load\", this.flashcards);\r\n//  }\r\n\r\n//  loadFlashcards(): void {\r\n//    this._route.params.subscribe(params => {\r\n//      this.collectionId = params['id']\r\n//      this._collectionFlashcardService.getCollectionFlashcard().subscribe(collectionFlashcards => {\r\n//        console.log(\"\", collectionFlashcards[0].collectionId)\r\n//        for (let cf of collectionFlashcards) {\r\n//          if (cf.collectionId == this.collectionId) {\r\n//            this.collectionFlashcards.push(cf);\r\n//          }\r\n//        }\r\n//      });\r\n//    });\r\n\r\n//  }\r\n\r\n//  showPreviousFlashcard(): void {\r\n//    if (this.currentIndex > 0) {\r\n//      this.currentIndex--;\r\n//    }\r\n//  }\r\n\r\n//  showNextFlashcard(): void {\r\n//    if (this.currentIndex < this.collectionFlashcards.length - 1) {\r\n//      this.currentIndex++;\r\n//    }\r\n//  }\r\n\r\n\r\n  //flip(index: number): void {\r\n  //  const content = document.getElementById('term' + index);\r\n\r\n  //  if (this.flashcards[index] && this.flashcards[index].flashcard) {\r\n  //    const flashcard = this.flashcards[index].flashcard;\r\n  //    const name = flashcard.name;\r\n  //    const description = flashcard.description;\r\n  //    const imageUrl = flashcard.imageUrl;\r\n\r\n  //    console.log('Name:', name);\r\n  //    console.log('Description:', description);\r\n  //    console.log('Image URL:', imageUrl);\r\n\r\n  //    if (content) {\r\n  //      if (content.innerHTML === description) {\r\n  //        if (imageUrl) {\r\n  //          content.innerHTML = name + '<br><img src=\"' + imageUrl + '\" alt=\"Flashcard Image\" class=\"img-fluid\">';\r\n  //        } else {\r\n  //          content.innerHTML = name;\r\n  //        }\r\n  //      } else {\r\n  //        content.innerHTML = description;\r\n  //      }\r\n  //    } else {\r\n  //      console.error(\"Content for index \" + index + \" not found.\");\r\n  //    }\r\n  //  } else {\r\n  //    console.error(\"Flashcard[\" + index + \"] or flashcard not found.\");\r\n  //  }\r\n  //}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}