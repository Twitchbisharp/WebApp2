{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FlashcardService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"api/flashcard/\"; // maybe typo with Flashcard/flashcard\n  }\n\n  getFlashcards() {\n    return this._http.get(this.baseUrl);\n  }\n  createFlashcard(newFlashcard) {\n    const createUrl = \"api/flashcard/create\";\n    return this._http.post(createUrl, newFlashcard);\n  }\n  getFlashcardById(flashcardId) {\n    const url = `${this.baseUrl}/${flashcardId}`;\n    return this._http.get(url);\n  }\n  updateFlashcard(flashcardId, newFlashcard) {\n    const url = `${this.baseUrl}/update/${flashcardId}`;\n    newFlashcard.flashcardId = flashcardId;\n    return this._http.put(url, newFlashcard);\n  }\n  deleteFlashcard(flashcardId) {\n    const url = `${this.baseUrl}/delete/${flashcardId}`;\n    return this._http.delete(url);\n  }\n}\nFlashcardService.ɵfac = function FlashcardService_Factory(t) {\n  return new (t || FlashcardService)(i0.ɵɵinject(i1.HttpClient));\n};\nFlashcardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FlashcardService,\n  factory: FlashcardService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,gBAAgB,CAAC,CAAC;EAEK;;EAEzCC,aAAa;IACX,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAe,IAAI,CAACC,OAAO,CAAC;EACnD;EAEAC,eAAe,CAACC,YAAwB;IACtC,MAAMC,SAAS,GAAG,sBAAsB;IACxC,OAAO,IAAI,CAACN,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,YAAY,CAAC;EACtD;EAEAG,gBAAgB,CAACC,WAAmB;IAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,IAAIM,WAAW,EAAE;IAC5C,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC5B;EAEAC,eAAe,CAACF,WAAmB,EAAEJ,YAAiB;IACpD,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,WAAW,EAAE;IACnDJ,YAAY,CAACI,WAAW,GAAGA,WAAW;IACtC,OAAO,IAAI,CAACT,KAAK,CAACY,GAAG,CAAMF,GAAG,EAAEL,YAAY,CAAC;EAC/C;EAEAQ,eAAe,CAACJ,WAAmB;IACjC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,WAAW,EAAE;IACnD,OAAO,IAAI,CAACT,KAAK,CAACc,MAAM,CAACJ,GAAG,CAAC;EAC/B;;AA5BWZ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAiB,SAAhBjB,gBAAgB;EAAAkB,YAHf;AAAM","names":["FlashcardService","constructor","_http","getFlashcards","get","baseUrl","createFlashcard","newFlashcard","createUrl","post","getFlashcardById","flashcardId","url","updateFlashcard","put","deleteFlashcard","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Flashcards\\flashcards.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IFlashcard } from \"./flashcard\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\n\r\nexport class FlashcardService {\r\n  private baseUrl = \"api/flashcard/\"; // maybe typo with Flashcard/flashcard\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getFlashcards(): Observable<IFlashcard[]> {\r\n    return this._http.get<IFlashcard[]>(this.baseUrl);\r\n  }\r\n\r\n  createFlashcard(newFlashcard: IFlashcard): Observable<any> {\r\n    const createUrl = \"api/flashcard/create\";\r\n    return this._http.post<any>(createUrl, newFlashcard);\r\n  }\r\n\r\n  getFlashcardById(flashcardId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${flashcardId}`;\r\n    return this._http.get(url)\r\n  }\r\n \r\n  updateFlashcard(flashcardId: number, newFlashcard: any): Observable<any> {\r\n    const url = `${this.baseUrl}/update/${flashcardId}`;\r\n    newFlashcard.flashcardId = flashcardId;\r\n    return this._http.put<any>(url, newFlashcard);\r\n  }\r\n\r\n  deleteFlashcard(flashcardId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/delete/${flashcardId}`;\r\n    return this._http.delete(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}