{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class FlashcardformComponent {\n  constructor(_formbuilder, _router) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this.isEditMode = false;\n    this.flashcardId = -1;\n    this.flashcardForm = _formbuilder.group({\n      name: ['', Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"FlashcardCreate form submitted:\");\n    console.log(this.flashcardForm);\n    console.log(\"The flaschard \" + this.flashcardForm.value.name + \" is created.\");\n    console.log(this.flashcardForm.touched);\n    if (this.isEditMode) {\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/flashcards']);\n        } else {\n          console.log('Flashcard update failed');\n        }\n      });\n    } else {\n      this._flashcardService.createflashcard(newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/flashcards']);\n        } else {\n          console.log('Flashcards creation failed');\n        }\n      });\n    }\n  }\n  backToFlashcards() {\n    this._router.navigate(['/flashcards']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.flashcardId = +params['id']; // Convert to number\n        this.loadFlashcardForEdit(this.flashcardId);\n      }\n    });\n  }\n  loadFlashcardForEdit(flashcardId) {\n    this._flashcardService.getFlashcardById(this.flashcardId).subscribe(flashcard => {\n      console.log('retrived flashcard: ', flashcard);\n      this.flashcardForm.patchValue({\n        name: flashcard.Name,\n        description: flashcard.Description,\n        imageUrl: flashcard.ImageUrl\n      });\n    }, error => {\n      console.error('Error loading flashcard for edit:', error);\n    });\n  }\n}\nFlashcardformComponent.ɵfac = function FlashcardformComponent_Factory(t) {\n  return new (t || FlashcardformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nFlashcardformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashcardformComponent,\n  selectors: [[\"app-flashcards-flashcardform\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"ImageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn-primary\", \"btn\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function FlashcardformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FlashcardformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"textarea\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵtext(16, \"Create Flashcard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17);\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function FlashcardformComponent_Template_button_click_18_listener() {\n        return ctx.backToFlashcards();\n      });\n      i0.ɵɵtext(19, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \"Create Flashcard\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.flashcardForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"disabled\", ctx.flashcardForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \"Flashcard \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","FlashcardformComponent","constructor","_formbuilder","_router","flashcardForm","group","name","required","description","imageUrl","onSubmit","console","log","value","touched","isEditMode","_flashcardService","updateFlashcard","flashcardId","newFlashcard","subscribe","response","success","message","navigate","createflashcard","backToFlashcards","ngOnInit","_route","params","loadFlashcardForEdit","getFlashcardById","flashcard","patchValue","Name","Description","ImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Flashcards\\flashcardform.component.ts","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Flashcards\\flashcardform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FlashcardService } from './flashcards.service';\r\n\r\n@Component({\r\n  selector: \"app-flashcards-flashcardform\",\r\n  templateUrl: \"./flashcardform.component.html\"\r\n})\r\n\r\nexport class FlashcardformComponent {\r\n  flashcardForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  flashcardId: number = -1;\r\n\r\n  constructor(private _formbuilder: FormBuilder, private _router: ActivatedRoute) {\r\n    this.flashcardForm = _formbuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      imageUrl: ['']\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"FlashcardCreate form submitted:\");\r\n    console.log(this.flashcardForm);\r\n    console.log(\"The flaschard \" + this.flashcardForm.value.name + \" is created.\");\r\n    console.log(this.flashcardForm.touched);\r\n\r\n    if (this.isEditMode) {\r\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/flashcards']);\r\n          }\r\n          else {\r\n            console.log('Flashcard update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._flashcardService.createflashcard(newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/flashcards']);\r\n          }\r\n          else {\r\n            console.log('Flashcards creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToFlashcards() {\r\n    this._router.navigate(['/flashcards']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.flashcardId = +params['id']; // Convert to number\r\n        this.loadFlashcardForEdit(this.flashcardId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadFlashcardForEdit(flashcardId: number) {\r\n    this._flashcardService.getFlashcardById(this.flashcardId)\r\n      .subscribe(\r\n        (flashcard: any) => {\r\n          console.log('retrived flashcard: ', flashcard);\r\n          this.flashcardForm.patchValue({\r\n            name: flashcard.Name,\r\n            description: flashcard.Description,\r\n            imageUrl: flashcard.ImageUrl\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading flashcard for edit:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>{{isEditMode ? 'Update' : 'Create'}}Create Flashcard</h2>\r\n\r\n<form [formGroup]=\"flashcardForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"description\">Description:</label>\r\n    <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"ImageUrl\">Image URL:</label>\r\n    <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\r\n  </div>\r\n  <button class=\"btn-primary btn\" type=\"submit\" [disabled]=\"flashcardForm.invalid\">Create Flashcard</button>\r\n      {{isEditMode ? 'Update' : 'Create'}}Flashcard\r\n  <button class=\"btn btn-secondary\" (click)=\"backToFlashcards()\">Cancel</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}