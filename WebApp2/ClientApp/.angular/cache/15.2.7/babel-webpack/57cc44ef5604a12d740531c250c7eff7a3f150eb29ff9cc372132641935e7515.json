{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./collections.service\";\nimport * as i2 from \"../Flashcards/flashcards.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction CollectionformComponent_select_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 8)(1, \"option\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const flashcard_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Flashcard name: \", flashcard_r1.name, \", Flashcard definition: \", flashcard_r1.description, \"\");\n  }\n}\nexport class CollectionformComponent {\n  constructor(_collectionService, _flashcardService, _formbuilder, _router, _route) {\n    this._collectionService = _collectionService;\n    this._flashcardService = _flashcardService;\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this.isEditMode = false;\n    this.collectionId = -1;\n    this.flashcards = [];\n    this.collectionForm = _formbuilder.group({\n      /*collectionDate: ['', Validators.required],*/\n      collectionName: ['']\n      //collectionFlashcard: [''],\n      //contributerId: [''],\n      //contributers: [''],\n    });\n  }\n\n  onSubmit() {\n    console.log(\"CollectionCreate form submitted:\");\n    console.log(this.collectionForm);\n    console.log(\"The collection \" + this.collectionForm.value.name + \" is created.\");\n    console.log(this.collectionForm.touched);\n    this.collectionForm.patchValue({\n      collectionDate: new Date().getDate(),\n      flashcards: this._flashcardService.getFlashcards().subscribe(data => {\n        console.log('All', JSON.stringify(data));\n        console.log(data);\n        this.flashcards = data;\n      })\n    });\n    console.log(\"flashcards: \", this.flashcards);\n    const newCollection = this.collectionForm.value;\n    if (this.isEditMode) {\n      this._collectionService.updateCollection(this.collectionId, newCollection).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/collections']);\n        } else {\n          console.log('Collection update failed');\n        }\n      });\n    } else {\n      this._collectionService.createCollection(newCollection).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/collections']);\n        } else {\n          console.log('Collections creation failed');\n        }\n      });\n    }\n  }\n  backToCollections() {\n    this._router.navigate(['/collections']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.collectionId = +params['id']; // Convert to number\n        this.loadCollectionForEdit(this.collectionId);\n      }\n    });\n  }\n  loadCollectionForEdit(collectionId) {\n    this._collectionService.getCollectionById(this.collectionId).subscribe(collection => {\n      console.log('retrived collection: ', collection);\n      this.collectionForm.patchValue({\n        collectionName: collection.collectionName,\n        collectionDate: collection.collectionDate,\n        contributer: collection.contributer,\n        totalFlashcards: collection.totalFlashcards\n      });\n    }, error => {\n      console.error('Error loading collection for edit:', error);\n    });\n  }\n}\nCollectionformComponent.ɵfac = function CollectionformComponent_Factory(t) {\n  return new (t || CollectionformComponent)(i0.ɵɵdirectiveInject(i1.CollectionService), i0.ɵɵdirectiveInject(i2.FlashcardService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nCollectionformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CollectionformComponent,\n  selectors: [[\"app-collections-collectionform\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"collectionName\"], [\"type\", \"text\", \"id\", \"collectionName\", \"formControlName\", \"collectionName\", 1, \"form-control\"], [\"for\", \"collectionFlashcard\"], [\"multiple\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-primary\", \"btn\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"multiple\", \"\"]],\n  template: function CollectionformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CollectionformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Add flashcards:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵtemplate(11, CollectionformComponent_select_11_Template, 3, 2, \"select\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function CollectionformComponent_Template_button_click_14_listener() {\n        return ctx.backToCollections();\n      });\n      i0.ɵɵtext(15, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Collection\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.collectionForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flashcards);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.collectionForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Collection\");\n    }\n  },\n  dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","CollectionformComponent","constructor","_collectionService","_flashcardService","_formbuilder","_router","_route","collectionForm","group","collectionName","onSubmit","console","log","value","name","touched","patchValue","collectionDate","Date","getDate","flashcards","getFlashcards","subscribe","data","JSON","stringify","newCollection","isEditMode","updateCollection","collectionId","response","success","message","navigate","createCollection","backToCollections","ngOnInit","params","loadCollectionForEdit","getCollectionById","collection","contributer","totalFlashcards","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Collections\\collectionform.component.html","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Collections\\collectionform.component.ts"],"sourcesContent":["<h2>{{isEditMode ? 'Update' : 'Create'}} Collection</h2>\r\n\r\n<form [formGroup]=\"collectionForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"collectionName\">Name:</label>\r\n    <input type=\"text\" id=\"collectionName\" formControlName=\"collectionName\" class=\"form-control\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"collectionFlashcard\">Add flashcards:</label>\r\n    <br />\r\n    <select multiple *ngFor=\"let flashcard of flashcards\">\r\n      <option>Flashcard name: {{flashcard.name}}, Flashcard definition: {{flashcard.description}}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <button class=\"btn-primary btn\" type=\"submit\" [disabled]=\"collectionForm.invalid\">{{isEditMode ? 'Update' : 'Create'}} Collection</button>\r\n  <button class=\"btn btn-secondary\" (click)=\"backToCollections()\">Cancel</button>\r\n</form>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CollectionService } from './collections.service';\r\nimport { IFlashcard } from '../Flashcards/flashcard';\r\nimport { FlashcardService } from '../Flashcards/flashcards.service';\r\n\r\n@Component({\r\n  selector: \"app-collections-collectionform\",\r\n  templateUrl: \"./collectionform.component.html\"\r\n})\r\n\r\nexport class CollectionformComponent {\r\n  collectionForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  collectionId: number = -1;\r\n  flashcards: IFlashcard[] = [];\r\n\r\n\r\n  constructor(private _collectionService: CollectionService, private _flashcardService: FlashcardService, private _formbuilder: FormBuilder, private _router: Router, private _route: ActivatedRoute) {\r\n    this.collectionForm = _formbuilder.group({\r\n      /*collectionDate: ['', Validators.required],*/\r\n      collectionName: [''],\r\n      //collectionFlashcard: [''],\r\n      //contributerId: [''],\r\n      //contributers: [''],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onSubmit() {\r\n    console.log(\"CollectionCreate form submitted:\");\r\n    console.log(this.collectionForm);\r\n    console.log(\"The collection \" + this.collectionForm.value.name + \" is created.\");\r\n    console.log(this.collectionForm.touched);\r\n\r\n    this.collectionForm.patchValue({\r\n      collectionDate: new Date().getDate(),\r\n      flashcards: this._flashcardService.getFlashcards().subscribe(data => {\r\n        console.log('All', JSON.stringify(data));\r\n        console.log(data);\r\n        this.flashcards = data;\r\n      })\r\n    })\r\n    console.log(\"flashcards: \", this.flashcards)\r\n    const newCollection = this.collectionForm.value;\r\n    \r\n    \r\n\r\n    if (this.isEditMode) {\r\n      this._collectionService.updateCollection(this.collectionId, newCollection)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/collections']);\r\n          }\r\n          else {\r\n            console.log('Collection update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._collectionService.createCollection(newCollection)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/collections']);\r\n          }\r\n          else {\r\n            console.log('Collections creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToCollections() {\r\n    this._router.navigate(['/collections']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.collectionId = +params['id']; // Convert to number\r\n        this.loadCollectionForEdit(this.collectionId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadCollectionForEdit(collectionId: number) {\r\n    this._collectionService.getCollectionById(this.collectionId)\r\n      .subscribe(\r\n        (collection: any) => {\r\n          console.log('retrived collection: ', collection);\r\n          this.collectionForm.patchValue({\r\n            collectionName: collection.collectionName,\r\n            collectionDate: collection.collectionDate,\r\n            contributer: collection.contributer,\r\n            totalFlashcards: collection.totalFlashcards\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading collection for edit:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}