{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContributerService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"api/contributer/\";\n  }\n  getContributers() {\n    return this._http.get(this.baseUrl);\n  }\n  createContributer(newContributer) {\n    const createUrl = \"api/contributer/create\";\n    return this._http.post(createUrl, newContributer);\n  }\n  getContributerById(contributerId) {\n    const url = `${this.baseUrl}/${contributerId}`;\n    return this._http.get(url);\n  }\n  updateContributer(contributerId, newContributer) {\n    const url = `${this.baseUrl}update/${contributerId}`;\n    console.log(\"url: \", url); // is this initialized? no\n    console.log(\"new contributer: \", newContributer);\n    newContributer.contributerId = contributerId;\n    return this._http.put(url, newContributer);\n  }\n  deleteContributer(contributerId) {\n    const url = `${this.baseUrl}/delete/${contributerId}`;\n    return this._http.delete(url);\n  }\n}\nContributerService.ɵfac = function ContributerService_Factory(t) {\n  return new (t || ContributerService)(i0.ɵɵinject(i1.HttpClient));\n};\nContributerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContributerService,\n  factory: ContributerService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,kBAAkB;EAEK;EAEzCC,eAAe;IACb,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAiB,IAAI,CAACC,OAAO,CAAC;EACrD;EAEAC,iBAAiB,CAACC,cAA4B;IAC5C,MAAMC,SAAS,GAAG,wBAAwB;IAC1C,OAAO,IAAI,CAACN,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,cAAc,CAAC;EACxD;EAEAG,kBAAkB,CAACC,aAAqB;IACtC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,IAAIM,aAAa,EAAE;IAC9C,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC5B;EAEAC,iBAAiB,CAACF,aAAqB,EAAEJ,cAAmB;IAC1D,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,UAAUM,aAAa,EAAE;IACpDG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,GAAG,CAAC,EAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,cAAc,CAAC;IAChDA,cAAc,CAACI,aAAa,GAAGA,aAAa;IAC5C,OAAO,IAAI,CAACT,KAAK,CAACc,GAAG,CAAMJ,GAAG,EAAEL,cAAc,CAAC;EACjD;EAEAU,iBAAiB,CAACN,aAAqB;IACrC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,aAAa,EAAE;IACrD,OAAO,IAAI,CAACT,KAAK,CAACgB,MAAM,CAACN,GAAG,CAAC;EAC/B;;AA9BWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAmB,SAAlBnB,kBAAkB;EAAAoB,YAHjB;AAAM","names":["ContributerService","constructor","_http","getContributers","get","baseUrl","createContributer","newContributer","createUrl","post","getContributerById","contributerId","url","updateContributer","console","log","put","deleteContributer","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\Contributers\\contributers.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IContributer } from \"./contributer\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\n\r\nexport class ContributerService {\r\n  private baseUrl = \"api/contributer/\"; \r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getContributers(): Observable<IContributer[]> {\r\n    return this._http.get<IContributer[]>(this.baseUrl);\r\n  }\r\n\r\n  createContributer(newContributer: IContributer): Observable<any> {\r\n    const createUrl = \"api/contributer/create\";\r\n    return this._http.post<any>(createUrl, newContributer);\r\n  }\r\n\r\n  getContributerById(contributerId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${contributerId}`;\r\n    return this._http.get(url)\r\n  }\r\n \r\n  updateContributer(contributerId: number, newContributer: any): Observable<any> {\r\n    const url = `${this.baseUrl}update/${contributerId}`;\r\n    console.log(\"url: \", url) // is this initialized? no\r\n    console.log(\"new contributer: \", newContributer)\r\n    newContributer.contributerId = contributerId;\r\n    return this._http.put<any>(url, newContributer);\r\n  }\r\n\r\n  deleteContributer(contributerId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/delete/${contributerId}`;\r\n    return this._http.delete(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}