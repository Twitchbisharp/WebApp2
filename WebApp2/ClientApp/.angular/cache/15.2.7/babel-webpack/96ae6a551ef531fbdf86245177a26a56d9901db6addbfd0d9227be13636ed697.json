{"ast":null,"code":"import { of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CollectionFlashcardService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"api/collectionFlashcard\";\n    this.collectionflashcards = [];\n  }\n  getCollectionFlashcard() {\n    return this._http.get(this.baseUrl);\n  }\n  getCollectionFlashcardByCollectionId(collectionId) {\n    const filteredResult = this.collectionflashcards.filter(collections => collections.collectionId == collectionId);\n    return of(filteredResult);\n  }\n  addCollectionFlashcard(newCollectionFlashcard) {\n    const createUrl = \"api/collectionFlashcard/add\";\n    return this._http.post(createUrl, newCollectionFlashcard);\n  }\n  ngOnInit() {\n    this.getCollectionFlashcardByCollectionId();\n  }\n}\nCollectionFlashcardService.ɵfac = function CollectionFlashcardService_Factory(t) {\n  return new (t || CollectionFlashcardService)(i0.ɵɵinject(i1.HttpClient));\n};\nCollectionFlashcardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CollectionFlashcardService,\n  factory: CollectionFlashcardService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,EAAE,QAAQ,MAAM;;;AAOrC,OAAM,MAAOC,0BAA0B;EAIrCC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAHjB,YAAO,GAAG,yBAAyB;IACnC,yBAAoB,GAA2B,EAAE;EAEhB;EAEzCC,sBAAsB;IACpB,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAyB,IAAI,CAACC,OAAO,CAAC;EAC7D;EACAC,oCAAoC,CAACC,YAAoB;IACvD,MAAMC,cAAc,GAAG,IAAI,CAACC,oBAAoB,CAACC,MAAM,CAAEC,WAAiC,IAAKA,WAAW,CAACJ,YAAY,IAAIA,YAAY,CAAC;IACxI,OAAOR,EAAE,CAACS,cAAc,CAAC;EAC3B;EAEAI,sBAAsB,CAACC,sBAA4C;IACjE,MAAMC,SAAS,GAAG,6BAA6B;IAC/C,OAAO,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAMD,SAAS,EAAED,sBAAsB,CAAC;EAChE;EAEAG,QAAQ;IACN,IAAI,CAACV,oCAAoC,EAAE;EAC7C;;AArBWN,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAiB,SAA1BjB,0BAA0B;EAAAkB,YAHzB;AAAM","names":["of","CollectionFlashcardService","constructor","_http","getCollectionFlashcard","get","baseUrl","getCollectionFlashcardByCollectionId","collectionId","filteredResult","collectionflashcards","filter","collections","addCollectionFlashcard","newCollectionFlashcard","createUrl","post","ngOnInit","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcards.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { ICollectionFlashcard } from \"./collectionFlashcard\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\n\r\nexport class CollectionFlashcardService implements OnInit {\r\n  private baseUrl = \"api/collectionFlashcard\";\r\n  private collectionflashcards: ICollectionFlashcard[] = [];\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getCollectionFlashcard(): Observable<ICollectionFlashcard[]> {\r\n    return this._http.get<ICollectionFlashcard[]>(this.baseUrl);\r\n  }\r\n  getCollectionFlashcardByCollectionId(collectionId: number): Observable<ICollectionFlashcard[]> { \r\n    const filteredResult = this.collectionflashcards.filter((collections: ICollectionFlashcard) => collections.collectionId == collectionId);\r\n    return of(filteredResult)\r\n  }\r\n\r\n  addCollectionFlashcard(newCollectionFlashcard: ICollectionFlashcard): Observable<any> {\r\n    const createUrl = \"api/collectionFlashcard/add\";\r\n    return this._http.post<any>(createUrl, newCollectionFlashcard);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCollectionFlashcardByCollectionId()\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}