{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./collectionFlashcards.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CollectionFlashcardComponent_tr_23_img_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 11);\n  }\n  if (rf & 2) {\n    const collectionFlashcard_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", collectionFlashcard_r1.flashcard.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CollectionFlashcardComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, CollectionFlashcardComponent_tr_23_img_8_Template, 1, 1, \"img\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const collectionFlashcard_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", collectionFlashcard_r1.flashcardId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", collectionFlashcard_r1.flashcard.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", collectionFlashcard_r1.flashcard.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.displayImage);\n  }\n}\nconst _c0 = function (a2) {\n  return [\"/collectionFlashcardform\", \"create\", a2];\n};\nexport class CollectionFlashcardComponent {\n  constructor(_collectionFlashcardService, _http, _router, _route) {\n    this._collectionFlashcardService = _collectionFlashcardService;\n    this._http = _http;\n    this._router = _router;\n    this._route = _route;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    this.collectionFlashcards = [];\n    this.collectionId = -1;\n    this._listFilter = '';\n    //  deleteCollection(collection: ICollectionFlashcard): void {\n    //    const confirmDelete = confirm(`Are you sure you want to delete \"${collection.collectionName}\"?`);\n    //    if (confirmDelete) {\n    //      this._collectionService.deleteCollection(collection.collectionId)\n    //        .subscribe(\n    //          (response) => {\n    //            if (response.success) {\n    //              console.log(response.message);\n    //              this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\n    //              // Update collections\n    //              this.getCollections();\n    //            }\n    //          },\n    //          (error) => {\n    //            console.error('Error deleting collection', error);\n    //          });\n    //    }\n    //}\n    this.filteredCollectionFlashcards = this.collectionFlashcards;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredCollectionFlashcards = this.performFilter(value);\n  }\n  getCollections() {\n    this._collectionFlashcardService.getCollectionFlashcard().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      console.log(data);\n      this.collectionFlashcards = data;\n      this.filteredCollectionFlashcards = this.collectionFlashcards;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLowerCase();\n    console.log(\"Performing filter on \", this.filteredCollectionFlashcards);\n    return this.collectionFlashcards.filter(collectionFlashcards => collectionFlashcards.flashcard.name.toLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToCollectionform() {\n    this._router.navigate(['/collectionform']);\n  }\n  ngOnInit() {\n    this.loadFlashcards();\n    console.log('Collectionflascards loaded: ', this.collectionFlashcards);\n  }\n  loadFlashcards() {\n    this._route.params.subscribe(params => {\n      this.collectionId = params['id'];\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(collectionFlashcards => {\n        console.log(\"\", collectionFlashcards[0].collectionId);\n        for (let cf of collectionFlashcards) {\n          if (cf.collectionId == this.collectionId) {\n            this.collectionFlashcards.push(cf);\n          }\n        }\n        this.filteredCollectionFlashcards = this.collectionFlashcards;\n      });\n    });\n  }\n}\nCollectionFlashcardComponent.ɵfac = function CollectionFlashcardComponent_Factory(t) {\n  return new (t || CollectionFlashcardComponent)(i0.ɵɵdirectiveInject(i1.CollectionFlashcardService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nCollectionFlashcardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CollectionFlashcardComponent,\n  selectors: [[\"app-collectionFlashcards-component\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[\"id\", \"tableLabel\"], [1, \"container\", \"row\"], [1, \"col-md-4\", \"p-0\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"d-flex\", \"flex-row\", \"justify-content-end\", \"col-md-4\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"width\", \"80\", 3, \"src\", 4, \"ngIf\"], [\"width\", \"80\", 3, \"src\"]],\n  template: function CollectionFlashcardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function CollectionFlashcardComponent_Template_button_click_4_listener() {\n        return ctx.loadFlashcards();\n      });\n      i0.ɵɵtext(5, \"Get Collections\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"h6\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CollectionFlashcardComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"table\", 7)(12, \"thead\")(13, \"tr\")(14, \"th\");\n      i0.ɵɵtext(15, \"Flashcard Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Flashcard Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Image\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\");\n      i0.ɵɵtemplate(23, CollectionFlashcardComponent_tr_23_Template, 9, 4, \"tr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 9);\n      i0.ɵɵtext(25, \"Add Flashcard To Collection\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Flashcards in \", ctx.collectionFlashcards[0].collection.collectionName, \"\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredCollectionFlashcards);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, -1));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i3.RouterLink],\n  styles: [\"thead[_ngcontent-%COMP%] {color: blue;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29sbGVjdGlvbkZsYXNoY2FyZC9jb2xsZWN0aW9uRmxhc2hjYXJkcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJ0aGVhZCB7Y29sb3I6IGJsdWU7fSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CollectionFlashcardComponent","constructor","_collectionFlashcardService","_http","_router","_route","collectionFlashcards","listFilter","_listFilter","value","console","log","filteredCollectionFlashcards","performFilter","getCollections","getCollectionFlashcard","subscribe","data","JSON","stringify","filterBy","toLowerCase","filter","flashcard","name","includes","toggleImage","displayImage","navigateToCollectionform","navigate","ngOnInit","loadFlashcards","params","collectionId","cf","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcards.component.html","C:\\Users\\fmnil\\source\\repos\\WebApp2\\WebApp2\\ClientApp\\src\\app\\CollectionFlashcard\\collectionFlashcards.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of Flashcards in {{collectionFlashcards[0].collection.collectionName}}</h1>\r\n\r\n<div class=\"container row\">   <!--Row of actions-->\r\n  <div class=\"col-md-4 p-0\">  <!--Column 1-->\r\n    <button class=\"btn btn-primary\" (click)=\"loadFlashcards()\">Get Collections</button>\r\n  </div>\r\n  <div class=\"d-flex flex-row justify-content-end col-md-4\"> <!--Column 2 with content aligned right-->\r\n    <h6>Filtered by: {{listFilter}}</h6>  <!--Dynamic filter visualisation-->\r\n  </div>\r\n  <div class=\"col-md-4\"> <!--Column 3-->\r\n    <input type='text' [(ngModel)]='listFilter' /> <!--Input field for filter-->\r\n  </div>\r\n</div>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Flashcard Id</th>\r\n      <th>Flashcard Name</th>\r\n      <th>Description</th>\r\n      <th>Image</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor='let collectionFlashcard of filteredCollectionFlashcards'>\r\n      <td> {{ collectionFlashcard.flashcardId }}</td>\r\n      <td> {{ collectionFlashcard.flashcard.name}}</td>\r\n      <td> {{ collectionFlashcard.flashcard.description}}</td>\r\n      <td><img  *ngIf=\"displayImage\" [src]=\"collectionFlashcard.flashcard.imageUrl\" width=\"80\"></td>\r\n      <!--<td> {{ collectionFlashcard.collectionId }}</td>\r\n      <td> {{ collectionFlashcard.collection.collectionName }}</td>-->\r\n\r\n\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/collectionFlashcardform', 'create', -1]\">Add Flashcard To Collection</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICollectionFlashcard } from './collectionFlashcard';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CollectionFlashcardService } from \"./collectionFlashcards.service\";\r\n\r\n@Component({\r\n  selector: 'app-collectionFlashcards-component',\r\n  templateUrl: './collectionFlashcards.component.html',\r\n  styles: ['thead {color: blue;}']\r\n})\r\n  export class CollectionFlashcardComponent implements OnInit {\r\n    viewTitle: string = 'Table'\r\n    displayImage: boolean = true;\r\n    collectionFlashcards: ICollectionFlashcard[] = [];\r\n    collectionId: number = -1;\r\n\r\n  constructor(private _collectionFlashcardService: CollectionFlashcardService, private _http: HttpClient, private _router: Router, private _route: ActivatedRoute) { }\r\n\r\n    private _listFilter: string = '';\r\n    get listFilter(): string {\r\n      return this._listFilter;\r\n    }\r\n    set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      console.log('In setter:', value)\r\n      this.filteredCollectionFlashcards = this.performFilter(value);\r\n    }\r\n\r\n  getCollections(): void {\r\n    this._collectionFlashcardService.getCollectionFlashcard().subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      console.log(data)\r\n      this.collectionFlashcards = data;\r\n      this.filteredCollectionFlashcards = this.collectionFlashcards;\r\n\r\n      })\r\n    }\r\n\r\n  //  deleteCollection(collection: ICollectionFlashcard): void {\r\n  //    const confirmDelete = confirm(`Are you sure you want to delete \"${collection.collectionName}\"?`);\r\n  //    if (confirmDelete) {\r\n  //      this._collectionService.deleteCollection(collection.collectionId)\r\n  //        .subscribe(\r\n  //          (response) => {\r\n  //            if (response.success) {\r\n  //              console.log(response.message);\r\n  //              this.filteredCollections = this.filteredCollections.filter(i => i !== collection);\r\n  //              // Update collections\r\n  //              this.getCollections();\r\n  //            }\r\n  //          },\r\n  //          (error) => {\r\n  //            console.error('Error deleting collection', error);\r\n  //          });\r\n\r\n  //    }\r\n  //}\r\n  filteredCollectionFlashcards: ICollectionFlashcard[] = this.collectionFlashcards;\r\n\r\n  performFilter(filterBy: string): ICollectionFlashcard[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    console.log(\"Performing filter on \", this.filteredCollectionFlashcards)\r\n    return this.collectionFlashcards.filter((collectionFlashcards: ICollectionFlashcard) =>\r\n      collectionFlashcards.flashcard.name.toLowerCase().includes(filterBy));\r\n  }\r\n\r\n  toggleImage(): void {\r\n    this.displayImage = !this.displayImage;\r\n  }\r\n\r\n  navigateToCollectionform() {\r\n    this._router.navigate(['/collectionform'])\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.loadFlashcards()\r\n    console.log('Collectionflascards loaded: ', this.collectionFlashcards);\r\n  }\r\n  loadFlashcards(): void {\r\n    this._route.params.subscribe(params => {\r\n      this.collectionId = params['id']\r\n      this._collectionFlashcardService.getCollectionFlashcard().subscribe(collectionFlashcards => {\r\n        console.log(\"\", collectionFlashcards[0].collectionId)\r\n        for (let cf of collectionFlashcards) {\r\n          if (cf.collectionId == this.collectionId) {\r\n            this.collectionFlashcards.push(cf);\r\n          }\r\n        }\r\n        this.filteredCollectionFlashcards = this.collectionFlashcards;\r\n        \r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}